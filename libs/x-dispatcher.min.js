/** 
 * @x-dispatcher
 * Lightweight Event Dispatcher
 * how to use: `readme.md`
 *
 * Developerd by `eaglex.net`
 * LICENCE: CC BY-SA
 * SOURCE: `https://creativecommons.org/licenses/by-sa/4.0/`
*/
window.xdispatcher=function(i,t=null){return new function(i,t){const s="[dispatcher]";this.uid=((i||"").toString()||(new Date).getTime()).toString(),this.debug=t,this.cbQueue={},this.dispatchInstance={},this._isActive=null,this.index=0,this.init=(()=>this.initListener()),this.emit=((i=null)=>this.next(i)),this.delete=(()=>this.del()),this.unsubscribe=(()=>this.del()),this.sub=(i=>this.subscribe(i)),this.initListener=(()=>(this.Dispatch(),this._isActive=!0,this)),this.next=((i=null)=>(!1!==this._isActive&&this.initListener(),this.dispatchInstance[this.uid]?this.dispatchInstance[this.uid].next(i):this.debug&&console.log({message:`${s} for uid not available`,uid:this.uid}),this)),this.Dispatch=(()=>{if(this.dispatchInstance[this.uid])return this;const i=this;return this.dispatchInstance[this.uid]||(this.dispatchInstance[this.uid]=new function(){this.uid=i.uid,this.data=null,this.next=(t=>{"cb"!==(t||{}).type&&(this.data=t),"cb"!==(t||{}).type?this.data?"function"==typeof i.cbQueue[i.uid]&&(i.index++,i.cbQueue[i.uid].call(i,this.data,i.uid,i.index)):i.debug&&console.log(`${s} no callback data`):"function"==typeof t.cb&&(i.cbQueue[i.uid]||(i.cbQueue[i.uid]=t.cb),this.data&&(i.index++,t.cb.call(i,this.data,i.uid,i.index)))})}),this}),this.isActive=(()=>this._isActive),this.del=(()=>(delete this.cbQueue[this.uid],delete this.dispatchInstance[this.uid],this._isActive=!1,this)),this.subscribe=(i=>{return"function"==typeof i?(this.dispatchInstance[this.uid]||this.Dispatch(),this.dispatchInstance[this.uid]&&this.dispatchInstance[this.uid].next({type:"cb",cb:i}),this):(this.debug&&console.log(`${s}[subscribe] cb must be set`),this)})}(i,t)};